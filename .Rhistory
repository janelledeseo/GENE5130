### Edit this line so your notebook renders properly
knitr::opts_knit$set(root.dir = normalizePath("~/GitHub/GENE5130"))
data <- read_csv("../data/Cholesterol.csv")
data <- read_csv("../data/Cholesterol.csv")
data <- read_csv("./data/Cholesterol.csv")
data <- read_csv("~/GitHub/data/Cholesterol.csv")
data <- read.csv("../data/Cholesterol.csv")
View(data)
#### First install the car package, this has a bunch of classic datasets used when learning ML.
#install.packages("car")
library(car)
library(ggplot2)
library(readr)
#### Look at the very elitist prestige package
help("Prestige")
ggplot(Prestige, aes(x= education, y = prestige)) + geom_point()
reg1<-lm(prestige ~ education, data = Prestige)
summary(reg1)
### Look at the example below, we are adding multiple predictors
reg2<-lm(prestige~education+log(income)+women, data=Prestige)
summary(reg2)
### We can add categorical data.
reg3<-lm(prestige~education+log(income)+type,data=Prestige)
summary(reg3)
View(reg1)
View(reg2)
View(reg3)
### lm = linear model
reg1 <- lm(prestige ~ education, data = Prestige)
summary(reg1)
### Look at the example below, we are adding multiple predictors
reg2 <- lm(prestige~education+log(income)+women, data=Prestige)
summary(reg2)
### Prestige is a built-in dataset
ggplot(Prestige, aes(x= education, y = prestige)) + geom_point() + geom_abline(mapping = NULL, data = NULL, stat = "identity", position = "identity")
### Prestige is a built-in dataset
ggplot(Prestige, aes(x= education, y = prestige)) + geom_point() + geom_abline(mapping = NULL, data = Prestige, stat = "identity", position = "identity")
ggplot(Prestige, aes(x= education, y = prestige)) + geom_point() + geom_abline(intercept = intercept, slope = slope, color = "blue")
intercept <- coef(reg1)[1]
slope <- coef(reg1)[2]
ggplot(Prestige, aes(x= education, y = prestige)) + geom_point() + geom_abline(intercept = intercept, slope = slope, color = "blue")
### Look at the example below, we are adding multiple predictors
reg2 <- lm(prestige~education+log(income)+women, data=Prestige)
summary(reg2)
### We can add categorical data
reg3 <- lm(prestige~education+log(income)+type,data=Prestige)
summary(reg3)
### Edit this line so your notebook renders properly
knitr::opts_knit$set(root.dir = normalizePath("~/GitHub/GENE5130"))
### Plot the data
ggplot(data, aes(x = rs6669795, y = CHOL)) + geom_point()
### Plot the data
ggplot(data, aes(x = rs7527051, y = CHOL)) + geom_point()
### Plot the data
ggplot(data, aes(x = rs12140539, y = CHOL)) + geom_point()
reg4 <- lm(data$CHOL ~ rs6669795, data = data)
summary(reg4)
reg4 <- lm(data$CHOL ~ rs7527051, data = data)
summary(reg4)
### This is significant
reg4 <- lm(data$CHOL ~ rs6669795, data = data)
summary(reg4)
### This is not significant
reg5 <- lm(data$CHOL ~ rs7527051, data = data)
summary(reg4)
### This is significant, much smaller p-value compared to above
reg4 <- lm(data$CHOL ~ rs6669795, data = data)
summary(reg4)
### This is not significant
reg5 <- lm(data$CHOL ~ rs7527051, data = data)
summary(reg4)
### This is significant, much smaller p-value compared to above
reg5 <- lm(data$CHOL ~ rs7527051, data = data)
summary(reg5)
### This is significant, much smaller p-value compared to above
